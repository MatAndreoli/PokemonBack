pipeline {
    agent any
    tools {
        maven 'Maven363' 
    }
    environment {
        DOCKERFILE_PATH = "src/main/docker/Dockerfile.jvm"
    }
    stages {
        stage('Build') {
            steps {
                echo "Building..."
                sh '''
                mvn clean install -DskipTests
                '''
            }
        }
        stage('Test') {
            steps {
                echo "Testing..."
                sh '''
                mvn test
                '''
            }
        }
        stage('Mutation') {
            steps {
                echo "Mutating..."
                sh '''
                mvn org.pitest:pitest-maven:mutationCoverage
                '''
            }
        }
        stage('Build Docker Image') {
            steps {
                sh'''
                python3 get_last_docker_img.py
                export $(grep -v '^#' .env | xargs)
                
                LOCAL_IMG=pokemon-api
                TAG_IMG=matandreoli/$LOCAL_IMG:$NEXT_VERSION
                IMG=matandreoli/$LOCAL_IMG:latest
                
                docker build -f $DOCKERFILE_PATH -t $LOCAL_IMG .

                docker tag $LOCAL_IMG $TAG_IMG
                docker tag $LOCAL_IMG $IMG

                docker images
                '''
            }
        }
        stage('Push Image to Docker') {
            steps{
                withCredentials([string(credentialsId: 'docker_hub_secret', variable: 'DOCKER_HUB_CRED')]) {
                    sh'''
                    echo $TAG_IMG
                    docker login -u matandreoli -p ${DOCKER_HUB_CRED}

                    export $(grep -v '^#' .env | xargs)
                    TAG_IMG=matandreoli/pokemon-api:$NEXT_VERSION
                    IMG=matandreoli/pokemon-api:latest
                    
                    docker push $TAG_IMG
                    docker push $IMG

                    docker rmi $TAG_IMG
                    '''
                }
            }
        }
    }
}
